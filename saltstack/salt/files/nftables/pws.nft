#!/usr/sbin/nft -f
# Ruleset files related to PWS config

{%- if pillar.firewall.strict_mode %}
    {%- set strict_policy = 'drop' %}
{%- else %}
    {%- set strict_policy = 'accept' %}
{%- endif %}

# Reload all tables if (not)exists
table inet pws-filter
table inet pws-nat
table inet pws-mangle

# Flush old tables
flush table inet pws-filter
flush table inet pws-nat
flush table inet pws-mangle

table inet pws-filter {
    chain input {
        type filter hook input priority filter
        policy {{ strict_policy }}

        # Allow traffic from established and related packets
        ct state established,related counter accept

        # Drop invalid packets
        ct state invalid counter drop

        # Allow loopback traffic
        iifname lo accept

        # Allow all ICMP and IGMP traffic, but enforce a rate limit
        # to help prevent some types of flood attacks.
        ip protocol icmp limit rate 10/second accept
        ip6 nexthdr ipv6-icmp limit rate 10/second accept
        ip protocol igmp limit rate 10/second accept

        # Allow SSH
        tcp dport {{ pillar.ssh.port }} counter accept comment "Allow SSH (port {{ pillar.ssh.port }})"

        # Allow DNS (UDP and TCP)
        udp dport 53 counter accept comment "Allow DNS (UDP)"
        tcp dport 53 counter accept comment "Allow DNS (TCP)"

        # Opened ports
        {% for name, port in pillar.firewall.ports_open.items() %}
        # Allow {{ name }}
        {{ port.proto | default('tcp') }} dport {{ port.dst }} counter accept comment "Allow port: {{ name }}"
        {% endfor %}

        {%- if pillar.check_mk_agent.ssh %}
        tcp dport 6556 counter drop comment "Drop Check_MK agent port if SSH is enabled"
        {%- endif %}

        # Jump to chain according to layer 3 protocol using a verdict map
        # meta protocol vmap { ip : jump input_v4, ip6 : jump input_v6 }

        # Logging
        # log prefix "[nftables] Inbound Denied: " flags all counter drop
{%- if pillar.firewall.strict_mode %}
        # log prefix "nftables drop in: "
        counter drop
{%- endif %}
    }
    # Chain for IPv4 specific rules (input)
    chain input_v4 {
    }
    # Chain for IPv6 specific rules (input)
    chain input_v6 {
    }
    chain forward {
        type filter hook forward priority filter
        policy {{ strict_policy }}

{%- if pillar.firewall.strict_mode %}
        # log prefix "nftables drop fw: "
        counter drop
{%- endif %}
    }
    chain output {
        type filter hook output priority filter
        policy accept
    }
}

table inet pws-nat {
    chain postrouting {
        type nat hook postrouting priority srcnat
        policy accept
    }
    chain prerouting {
        type nat hook prerouting priority dstnat
        policy accept
    }
    chain output {
        type nat hook output priority dstnat
        policy accept
    }
}

table inet pws-mangle {
    chain prerouting {
        type filter hook prerouting priority mangle
        policy accept
    }
    chain output {
        type route hook output priority mangle
        policy accept
    }
}

# Openhab
version: '3'

services:

  openhab:
    container_name: {{ pillar.openhab.id }}
    build: .
    network_mode: host
    restart: always
    ports:
      - '8080:8080'
    cap_add:
      - NET_RAW
    environment:
      USER_ID: {{ pillar.static.uids.master }}
      GROUP_ID: {{ pillar.static.uids.master }}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - {{ pillar.openhab.data_dir }}/conf:/openhab/conf
      - {{ pillar.openhab.data_dir }}/userdata:/openhab/userdata
      - {{ pillar.openhab.data_dir }}/addons:/openhab/addons
      - {{ pillar.openhab.data_dir }}/java:/openhab/.java

{% for z2m_id, z2m in  pillar.openhab.zigbee2mqtt.instances.items() %}
{% set z2m_data_dir = pillar.openhab.zigbee2mqtt.data_dir + '/' + z2m_id %}
  zigbee2mqtt-{{ z2m_id }}:
    container_name: {{ pillar.openhab.zigbee2mqtt.id }}-{{ z2m_id }}
    image: koenkk/zigbee2mqtt:{{ pillar.openhab.zigbee2mqtt.version }}
    restart: always
    ports:
      - '127.0.0.1:{{ z2m.port }}:3001'
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - {{ z2m_data_dir }}:/app/data
      - {{ z2m_data_dir }}/configuration.yaml:/app/data/configuration.yaml:ro
      - {{ z2m_data_dir }}/secrets.yaml:/app/data/secrets.yaml:ro
    {% if z2m.device %}
    devices:
      - /dev/serial/by-id/{{ z2m.device }}:/dev/serial/by-id/{{ z2m.device }}
    {% endif %}
{% endfor %}

  mosquitto:
    container_name: {{ pillar.openhab.mosquitto.id }}
    image: eclipse-mosquitto:{{ pillar.openhab.mosquitto.version }}
    restart: always
    ports:
      - '1883:1883'
      - '9001:9001'
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - {{ pillar.openhab.mosquitto.data_dir }}/config:/mosquitto/config
      - {{ pillar.openhab.mosquitto.data_dir }}/data:/mosquitto/data
      - {{ pillar.openhab.mosquitto.data_dir }}/log:/mosquitto/log

  {%- if pillar.openhab.tuyamqtt.id %}
  tuya-mqtt:
    container_name: {{ pillar.openhab.tuyamqtt.id }}
    image: gugabguerra/tuya-mqtt:{{ pillar.openhab.tuyamqtt.version }}
    restart: always
    environment:
      DEBUG: 'tuya-mqtt:*'
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - {{ pillar.openhab.tuyamqtt.data_dir }}/config.json:/app/config.json:ro
      - {{ pillar.openhab.tuyamqtt.data_dir }}/devices.conf:/app/devices.conf:ro
  {%- endif %}

  vmagent:
    container_name: {{ pillar.openhab.vmagent.id }}
    hostname: vmagent
    image: victoriametrics/vmagent:v{{ pillar.openhab.vmagent.version }}
    ports:
      - '8429:8429'
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - /etc/ssl/certs/pws.ca.pem:/etc/ssl/certs/pws.ca.pem:ro
      - ./vm-relabel.yaml:/cfg/vm-relabel.yaml:ro
      - {{ pillar.openhab.vmagent.data_dir }}/data:/vmagentdata
    command:
      - '--remoteWrite.url={{ pillar.openhab.vmagent.remote_url }}'
      # Extra config to mark this instance
      - '--remoteWrite.urlRelabelConfig=/cfg/vm-relabel.yaml'
      # Enable disk cache to store data on network loss
      # https://docs.victoriametrics.com/vmagent/#disabling-on-disk-persistence
      - '--remoteWrite.tmpDataPath=/vmagentdata/buffer'

  influxdb:
    container_name: {{ pillar.openhab.influxdb.id }}
    hostname: influxdb
    image: influxdb:{{ pillar.openhab.influxdb.version }}
    restart: always
    ports:
      # Expose port as 9086 for debug
      - '9086:8086'
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - {{ pillar.openhab.influxdb.data_dir }}:/var/lib/influxdb

  influxdb-redirect:
    container_name: {{ pillar.openhab.influxdb.id }}-redirect
    hostname: influxdb-redirect
    image: nginx:1.27.3
    restart: always
    ports:
      - '8086:80'
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /etc/ssl/certs/pws.ca.pem:/etc/ssl/certs/pws.ca.pem:ro
      - ./influxdb-mirror:/etc/nginx/conf.d:ro

{% if pillar.openhab.yandex2mqtt.id %}
  yandex2mqtt:
    container_name: {{ pillar.openhab.yandex2mqtt.id }}
    image: petrows/yandex2mqtt:{{ pillar.openhab.yandex2mqtt.version }}
    restart: always
    ports:
      - '4001:4001'
    environment:
      PATH_CONFIG: ./config
      PATH_DEVICES: ./config.devices
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - {{ pillar.openhab.yandex2mqtt.data_dir }}:/opt/yandex2mqtt/data:rw
      - /srv/openhab-data/conf/services/yandex2mqtt.js:/opt/yandex2mqtt/config.js:ro
      - /srv/openhab-data/conf/yandex2mqtt.devices.js:/opt/yandex2mqtt/config.devices.js:ro
      - /srv/openhab-data/conf/yandex2mqtt.codegen.js:/opt/yandex2mqtt/yandex2mqtt.codegen.js:ro
      - /srv/openhab-data/conf/yandex2mqtt.template.js:/opt/yandex2mqtt/yandex2mqtt.template.js:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /etc/ssl/certs:/etc/ssl/certs:ro
{% endif %}

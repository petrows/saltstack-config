# NGINX vhost config for {{ conf_id }}
# domain: {{ conf.domain }}
# vhost: {{ conf_id }}
# type: {{ conf_type }}

{%- set force_ssl = conf.ssl_force|default(True) %}
{%- set enable_frame = conf.enable_frame|default(False) %}
{%- set enable_http2 = conf.enable_http2|default(False) %}
{%- set enable_dotfiles = conf.enable_dotfiles|default(False) %}
{%- set enable_robots = conf.enable_robots|default(False) %}
{%- set custom_config = conf.custom_config|default('') %}
{%- set custom_config_proxy = conf.custom_config_proxy|default('') %}
{%- set redirect_target = conf.redirect_target|default('') %}
{%- set redirect_type = conf.redirect_type|default('301') %}
{%- set php = conf.php|default({}) %}
{% if force_ssl %}
# HTTP must redirect to HTTPS
server {
    listen 80;
    server_name {{ conf.domain }};

    location / {
        return 301 https://$http_host$request_uri;
    }

    access_log  /var/log/nginx/{{ conf_id }}.access.log;
    error_log   /var/log/nginx/{{ conf_id }}.error.log;
}
{%- endif %}

server {
    listen 443 ssl{% if enable_http2 %} http2{% endif %};
{%- if not force_ssl %}
    # SSL is not forced for this vhost, we can allow http connections
    listen 80;
{%- endif %}

    server_name {{ conf.domain }};

{%- if conf.port|default(False) %}
    set $proxy_dst 127.0.0.1:{{ conf.port }};
{%- endif %}

{% if conf_type == 'php' or conf_type == 'php-docker' %}
    root {{ conf.root }}/web;
{%- else %}
    root {{ conf.root|default('/var/www/html') }};
{%- endif %}

    access_log  /var/log/nginx/{{ conf_id }}.access.log;
    error_log   /var/log/nginx/{{ conf_id }}.error.log;

{% if force_ssl %}
    # Add headers to serve security related headers
    # Before enabling Strict-Transport-Security headers please read into this
    # topic first.
    add_header Strict-Transport-Security "max-age=15768000; preload;" always;
{%- endif %}

    add_header Referrer-Policy "no-referrer";
    add_header X-Content-Type-Options "nosniff";
{%- if not enable_frame %}
    add_header X-Frame-Options "SAMEORIGIN";
{%- endif %}
    add_header X-Permitted-Cross-Domain-Policies "none";
    add_header X-XSS-Protection "1; mode=block";
{%- if not enable_robots %}
    add_header X-Robots-Tag "noindex, nofollow";
{%- endif %}

    # Remove X-Powered-By, which is an information leak
    add_header X-Powered-By DENY;

    # SSL configuration
{%- if ssl_type == 'external' %}
    # Config defined as 'external' - try to use Letsencrypt
    include acme.conf;
{%- endif %}
{%- if ssl_cert %}
    ssl_certificate {{ ssl_cert }};
{%- endif %}
{%- if ssl_key %}
    ssl_certificate_key {{ ssl_key }};
{%- if not enable_dotfiles %}
    # Disable .dotfiles
    location ~ /\. {
        deny all;
    }
{%- endif %}
{%- if conf_type == 'proxy' %}
    location / {
        client_max_body_size    0;
        gzip                    off;
        proxy_read_timeout      300;
        proxy_connect_timeout   300;
        proxy_redirect          off;
        proxy_http_version      1.1;
        proxy_set_header    Host                $http_host;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-Ssl     on;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Host    $http_host;
        proxy_set_header    X-Forwarded-Proto   $scheme;
        proxy_pass http://$proxy_dst;
        proxy_redirect default;
{{ custom_config_proxy|indent(8, True) }}
    }
{%- endif %}
{%- if conf_type == 'folder' %}
    location / {
        autoindex on;
        autoindex_exact_size off;
        autoindex_format html;
        autoindex_localtime on;
    }
{%- endif %}
{%- if conf_type == 'php' or conf_type == 'php-docker' %}
    index index.php;
    location / {
		try_files $uri $uri/ {{ php.rewrite_rule|default('/index.php?q=$uri&$args') }};
	}
	location ~ \.php$ { include {{ conf_type }}.conf; }
{%- endif %}
{%- if conf_type == 'redirect' %}
    location / {
		return 301 {{ redirect_target }};
	}
{%- endif %}

{%- endif %}
{{ custom_config|indent(4, True) }}
}

#!/usr/bin/env python3

import argparse
import requests
import yaml
import json
import sys
import os
import urllib3
from urllib.parse import urlencode
from pprint import pprint

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

# Checkmk States
OK = 0
WARN = 1
CRIT = 2
UNKNOWN = 3

def print_checkmk(channels):
    for ch in channels:
        ch_id = ch["channel"]
        online = ch["online"]
        name = ch.get("name", None)
        if not name:
            continue
        state = OK if online == 1 else CRIT
        status_str = "Online" if online == 1 else "Offline"
        print(f"{state} \"Reolink {name}\" status={online} {name} is {status_str}")

config = {}
session = requests.Session()

parser = argparse.ArgumentParser(
    description='Script get all connected Reolink cameras and their status',)

parser.add_argument(
    '--config',
    type=str,
    action='store',
    default='/etc/check_mk/reolink_hub_stats.yaml',
    help='Config file to read',
)

args = parser.parse_args()

try:
    with open(args.config, 'r') as f:
        config = yaml.safe_load(f)
except Exception as e:
    print(f"{CRIT} reolink_hub - Failed to read config: {e}", file=sys.stderr)
    sys.exit(1)

ip = config["reolink"]["ip"]
username = config["reolink"]["username"]
password = config["reolink"]["password"]

url = f'https://{ip}/api.cgi'
params = { 'cmd': 'GetChannelStatus', 'user': username, 'password': password }
url = "{}?{}".format(url, urlencode(params))

try:
    r = session.get(url, timeout=5, verify=False)
    r.raise_for_status()
    data = r.json()[0]["value"]["status"]
    print_checkmk(data)
except Exception as e:
    print(f"{CRIT} reolink_hub - Channel status error: {e}", file=sys.stderr)
    sys.exit(1)



# NGINX auto proxy config for {{ config_name }}

# HTTP must redirect to HTTPS
server {
    listen 80;
    server_name {{ domain|join(" ") }};

    location / {
        return 301 https://$http_host$request_uri;
    }

    access_log  /var/log/nginx/{{ config_name }}.access.log;
    error_log   /var/log/nginx/{{ config_name }}.error.log;
}

server {
    listen 0.0.0.0:443 ssl;
    listen [::]:443 ssl;
    server_name {{ domain|join(" ") }};

    root /var/www/html;
    access_log  /var/log/nginx/{{ config_name }}.access.log;
    error_log   /var/log/nginx/{{ config_name }}.error.log;
    location / {
        client_max_body_size 0;
        gzip off;
        proxy_read_timeout      300;
        proxy_connect_timeout   300;
        proxy_redirect          off;
        proxy_http_version 1.1;
        proxy_set_header    Host                $http_host;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-Ssl     on;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto $scheme;
        proxy_pass http://127.0.0.1:{{ port }};
    }

    include acme.conf;

# Check - if ACME certs are exists - use them, otherwise use dummy one
{% if salt['file.file_exists']('/etc/letsencrypt/live/'+domain[0]+'/fullchain.pem') %}
    ssl_certificate /etc/letsencrypt/live/{{ domain[0] }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ domain[0] }}/privkey.pem;
{% else %}
    ssl_certificate /etc/nginx/ssl-selfsigned.crt;      # dummy, to be replaced with certbot
    ssl_certificate_key /etc/nginx/ssl-selfsigned.key;  # dummy, to be replaced with certbot
{% endif %}

}
